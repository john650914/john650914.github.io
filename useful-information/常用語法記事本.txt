################################## metadata參考 ##################################
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">


################################## media query ##################################
@media screen and (min-width: 769px) { /*大於等於769px*/ }
@media screen and (max-width: 768px) { /*小於等於768px*/ }


################################## sass常用function ##################################
@function vw($size, $breakpoint:768) {
	@return ($size / $breakpoint) * 100vw;
}

@function stroke($stroke, $color) {
    $shadow: ();
    $from: $stroke*-1;
    @for $i from $from through $stroke {
     @for $j from $from through $stroke {
            $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);
        }
    }
    @return $shadow;
}

@mixin media($breakpoint:768px){
	@media screen and (max-width:$breakpoint){
		@content;
	}
}


################################## css常用設定 ##################################
body, input, button, textarea, select, optgroup{
	font-family: "PingFangTC-Regular", "Heiti TC", "Noto Sans TC", "Microsoft JhengHei", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 16px;
	color: #000;
	line-height: 1;
}
body{
	line-height: 1.4;
}
input, button, textarea, select, optgroup{
	padding: 0;
	margin: 0;
	outline: none;
	border: none;
	appearance: none;
	background: none;
}


################################## -ms-設定 ##################################



################################## 漸層 ##################################
.selector{
	background-image: linear-gradient(red, yellow); /*寫background-image應該是個選項吧，直接寫background也可以*/
}
.selector{
	background: linear-gradient(to right, red , yellow); /*left to right*/
}
.selector{
	background: linear-gradient(to bottom right, red, yellow); /*top left to bottom right*/
}
.selector{
	background: linear-gradient(180deg, red, yellow); /*180deg*/
}
.selector{
	background: linear-gradient(red, yellow, green); /*Multiple Color Stops*/
}
.selector{
	background: linear-gradient(#141d75, #141d75 48%, #00b4ff 52%, #00b4ff); /*with Specified Arbitrary Stops*/
}
.selector{
	background: radial-gradient(circle, #00b4ff, #141d75); /*Radial Gradient*/
}

//IE9不支援，請用filter：
.selector{
	filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=0, StartColorStr='#ff0000', EndColorStr='#000000');
}
.selector{
	filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=1, StartColorStr='#500cff00', EndColorStr='#FF000000');
}
NOTE：色碼可接受8個數字，前兩碼代表透明度，後6碼代表16進位色碼，GradientType 0為垂直，GradientType 1為水平


################################## 背景靠右 ##################################
selector{
	background: url(arrow.png) top 50% right 10px no-repeat;
}


################################## 多重背景 multi background ##################################
//先設定的背景會疊在後設定的背景之上
.container{
	padding: 20px 0;
	background-image: url(top.png), url(middle.png), url(bottom.png);
	background-clip: padding-box, content-box, padding-box;
	background-repeat: no-repeat, repeat-y, no-repeat;
	background-size: 100% 20px, 100% 20px, 100% 20px;
	background-position: 0% 0%, 0% 0%, 0% 100%;
}


################################## flex ##################################
// 容器屬性：
display			// flex︱inline-flex
flex-direction	// row(預設)︱column︱row-reverse︱column-reverse
flex-wrap		// nowrap(預設)︱wrap︱wrap-reverse;
flex-flow		// flex-direction與flex-wrap的縮寫
justify-content	// flex-start(預設)︱flex-end︱center︱space-between︱space-around︱space-evenly
align-items		// stretch(預設)︱center︱flex-start︱flex-end︱baseline
align-content	// stretch(預設)︱center︱flex-start︱flex-end︱space-between︱space-around︱space-evenly

// 內容物屬性：
flex			// flex-grow︱flex-shrink︱flex-basis︱auto(=1 1 auto)︱none(=0 0 auto), [flex-grow][flex-shrink][flex-basis]的縮寫，如果只寫一個值就是指flex-grow
flex-grow		// 數值，預設為0，代表內容物的空間分配比例
flex-shrink		// 數值，預設為1，同樣代表內容物的空間分配比例，但作用於當容器空間不夠時的縮減比例
flex-basis		// 數值，預設為auto，內容物的基本空間，可以用各種單位
align-self		// auto︱stretch︱center︱flex-start︱flex-end︱baseline︱inherit
order			// 數值，預設為0

註：IE9不支援；網路上好像說IE10要寫-ms-？


################################## css placeholder ##################################
input::placeholder{
	color: #f9daac;
}
input:-ms-input-placeholder{ /*IE要分開寫*/
	color: #f9daac;
}


################################## input 及 select 清樣式 ##################################
// 基本清樣式：
input, select, button, textarea{
	padding: 0;
	color: balck;
	font-size: 16px;
	line-height: 1;
	outline: none;
	border: none;
	border-radius: 0;
	background: none;
	appearance: none;
	vertical-align: middle;
	display: inline-block;
}
input, select{
	height: 24px; //高度只能寫死才會一樣高
}

// iOS placeholder高度問題：
input::placeholder{
	line-height: auto;
}

// 清除 input type=number 上下箭頭：
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
	appearance: none;
	margin: 0;
}

// IE清除 select 箭頭：
select::-ms-expand{
	display: none;
}

// IE清除 input 打叉：
input::-ms-clear {
	display: none;
}

// checkbox radio 自訂樣式
input[type=checkbox], input[type=radio]{
	width: 18px;
	height: 18px;
	padding: 0; //上面input清樣式有寫的話就不用
	margin: 0 4px 0 0;
	border: none; //上面input清樣式有寫的話就不用
	outline: none; //上面input清樣式有寫的話就不用
	vertical-align: middle; //上面input清樣式有寫的話就不用
	cursor: pointer;
	appearance: none; //上面input清樣式有寫的話就不用
	background: none; //上面input清樣式有寫的話就不用
	background-size: contain;
	background-repeat: no-repeat;
	background-position: 50% 0%;
	background-size: cover;
	display: inline-block; //上面input清樣式有寫的話就不用
}
input::-ms-check{ //IE清除樣式：
	display:none
}
input[type=checkbox]{
	background-image: url(checkbox.png);
}
input[type=radio]{
	background-image: url(radio.png);
}
input[type=checkbox]:checked, input[type=radio]:checked{
	background-position: 50% 100%;
}


################################## 預設 .btn 樣式 ##################################
.btn{
	padding: 26px 30px;
	color: #FFFFFF;
	font-size: 40px;
	font-weight: bold;
	text-decoration: none;
	text-align: center;
	line-height: 1;
	outline: 0;
	border: none;
	border-radius: 200px;
	box-sizing: border-box;
	background-color: #ff8343;
	appearance: none;
	display: inline-block;
}


################################## 文字…... ##################################
width: 100%;
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;
display: block;


################################## table ##################################
table {
	border-collapse: collapse;
	table-layout: fixed;
}


################################## animation ##################################
縮寫語法：
selector{
	animation: [name] [duration] [timing-function] [delay] [iteration-count] [direction];
}
@keyframes [name]{
	from	{left:0px;}
	to		{left:100px; background:red;}
}
animation-name				keyframename | none
animation-duration			time (ex: 1s)
animation-timing-function	linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier(n,n,n,n)
animation-delay				time
animation-iteration-count	number | infinite
animation-direction			normal | alternate
animation-play-state		paused | running

※IE9不支援
※animation-fill-mode: forwards; //讓動畫停在最後一格


################################## transform ##################################
/*有的瀏覽器對行內元素無效*/

縮放：
transform: scale(2);
transform: scale(0.3, 0.6); //(x, y)

旋轉：
transform: rotate(20deg);
transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg); //IE9不支援

傾斜：
transform: skew(20deg, 20deg); //(x, y)

梯形：
transform: perspective(300px) rotateX(30deg); //IE9不支援

轉移(translate這個字很怪，網路上有人翻平移)：
transform: translate(15px,15px); //(x, y)
transform: translate(-50%); //指的是自己的50%
transform: translateX(50%); //等於上面的

變形的起點：
transform-origin: 50% 50%; //(y, x)…我覺得啦
/*一定要撘配transform屬性使用*/

混合使用：
transform: scale(2) rotate(45deg);

2D矩陣：
transform: matrix(1, -0.3, 0, 1, 0, 0); //看起來不是用deg的單位
matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY());

資源：
https://webcode.tools/css-generator/perspective


################################## transition ##################################
selector{
	transition: all 1s; //基本用法；漸變前、後的選擇器都加才會有「來、回」的效果
}


################################## list counter ##################################
<div>
	<span></span>
	<span></span>
</div>
div{
	counter-reset: num;
}
span:before{
	counter-increment: num;
	content: counter(num) '. ';
}


################################## 自訂義列表數字的樣式 ##################################
ol{
	list-style: none;
	counter-reset: myCounter;
	li{
		counter-increment: myCounter;
		&:before{
			content: "Q"counter(myCounter)".";
			color: red;
		}
	}
}


################################## gbox 清樣式 ##################################
#gbox{
	.gbox-wrap{
		width: auto;
		max-width: none;
		margin: 0;
		padding: 0;
		.gbox-content{
			padding: 0;
		}
		.gbox-close{
			font-size: 0;
		}
		.gbox-action{
			.gbox-btn{
				margin: 0;
			}
		}
	}
}

//css version：
#gbox .gbox-wrap{
	width: auto;
	max-width: none;
	margin: 0;
	padding: 0;
}
#gbox .gbox-wrap .gbox-content{
	padding: 0;
}
#gbox .gbox-wrap .gbox-close{
	font-size: 0;
}
#gbox .gbox-wrap .gbox-action .gbox-btn{
	margin: 0;
}


################################## gbox 所有參數（大部份的值為預設值） ##################################
$('.popupbox').gbox('<p>訊息內容可以放HTML</p>', {
	addClass: null, //接受字串
	titleBar: null, //接受字串
	fixedPos: true, //跳出Lightbox是否鎖定畫面捲動
	hasCloseBtn: false,
	closeBtn: 'x', //右上方關閉按鈕樣式，可輸入文字x或插html<img>標籤。
	hasActionBtn: true, //下方是否出現按鈕列
	clickBgClose: false,
	afterClose: function(){ //預設為null //Lightbox關閉後要做的事。輸入網址為轉導亦可輸入function（實測後發現有設定actionBtns的話會失）
		console.log('closed');
		$.gbox.close();
	},
	afterOpen: function(){ //預設為null //Lightbox開啟時做的事
		console.log(opened);
	},
	actionBtns: [ //預設為一個陣列包含一個基本的物件 //
		{
			text: '立即啟動遊戲',
			id: 'hasId',
			target: false, //是否另開頁面(另開後會關閉gbox)
			click: 'https://tw.beanfun.com'
		},{
			text: '回活動列表',
			class: 'btn2',
			click: function(){
				$.gbox.close();
				do something...
			}
		}
	]
});


################################## tiny-slider 範例 ##################################
文件：https://ganlanyuan.github.io/tiny-slider/

<div class="slide-wrap">
	<div class="slide">
		<div></div>
		<div></div>
		<div></div>
	</div>
	<div class="slide-prev"></div>
	<div class="slide-next"></div>
	<div class="slide-dots"></div>
</div>

var slide = tns({
	container: '.slide',
	loop: true,
	autoplay: true,
	autoplayButtonOutput: false,
	items: 1,
	center: true,
	controls: true,
	nav: true, //點點點
	slideBy: 'page',
	fixedWidth: 400,
	autoWidth: true,
	startIndex: 2,
	gutter: 10,
	axis: 'vertical',
	speed: 200,
	lazyload: true,
	mouseDrag: false,
	responsive: {
		350: {
			items: 2,
			controls: true,
		},
		500: {items: 3}
	},
	prevButton: '.slide-prev',
	nextButton: '.slide-next',
	navContainer: '.slide-dots'
});

slide.destroy();
$('.slide').empty(); //如果要在.slide繼續做tns()的話


################################## 控制動態載入的html ##################################
$(document).on('click', '.my-class', function(){
	alert(1234);
});


################################## click outside of an element and do something(1) ##################################
$(window).click(function(){
	alert('外面被點了');
});
$('.inner').click(function(e){
	e.stopPropagation();
});


################################## click outside of an element and do something(2) ##################################
$(document).click(function(event){
	var $target = $(event.target);
	if(!$target.closest('.inner').length && $('.inner').is(":visible")){
		alert('外面被點了');
	}
});


################################## 取得select下拉選單的索引值 ##################################
$('.my-select')[0].selectedIndex;
$('.my-select').prop('selectedIndex');


################################## 取得同class命名但在不同父層的index ##################################
$('.btn').click(function(){
	var idx = $('body .btn').index(this);
	alert(idx);
});


################################## ?sec=sec1 範例（btn click/pageload） ##################################


################################## scrollTo套件 ##################################
//https://demos.flesler.com/jquery/scrollTo/
//Copyright (c) 2007-2015 Ariel Flesler - aflesler<a>gmail<d>com | http://flesler.blogspot.com* Licensed under MIT *author Ariel Flesler *version 2.1.2
;(function(f){"use strict";"function"===typeof define&&define.amd?define(["jquery"],f):"undefined"!==typeof module&&module.exports?module.exports=f(require("jquery")):f(jQuery)})(function($){"use strict";function n(a){return!a.nodeName||-1!==$.inArray(a.nodeName.toLowerCase(),["iframe","#document","html","body"])}function h(a){return $.isFunction(a)||$.isPlainObject(a)?a:{top:a,left:a}}var p=$.scrollTo=function(a,d,b){return $(window).scrollTo(a,d,b)};p.defaults={axis:"xy",duration:0,limit:!0};$.fn.scrollTo=function(a,d,b){"object"=== typeof d&&(b=d,d=0);"function"===typeof b&&(b={onAfter:b});"max"===a&&(a=9E9);b=$.extend({},p.defaults,b);d=d||b.duration;var u=b.queue&&1<b.axis.length;u&&(d/=2);b.offset=h(b.offset);b.over=h(b.over);return this.each(function(){function k(a){var k=$.extend({},b,{queue:!0,duration:d,complete:a&&function(){a.call(q,e,b)}});r.animate(f,k)}if(null!==a){var l=n(this),q=l?this.contentWindow||window:this,r=$(q),e=a,f={},t;switch(typeof e){case "number":case "string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(e)){e= h(e);break}e=l?$(e):$(e,q);case "object":if(e.length===0)return;if(e.is||e.style)t=(e=$(e)).offset()}var v=$.isFunction(b.offset)&&b.offset(q,e)||b.offset;$.each(b.axis.split(""),function(a,c){var d="x"===c?"Left":"Top",m=d.toLowerCase(),g="scroll"+d,h=r[g](),n=p.max(q,c);t?(f[g]=t[m]+(l?0:h-r.offset()[m]),b.margin&&(f[g]-=parseInt(e.css("margin"+d),10)||0,f[g]-=parseInt(e.css("border"+d+"Width"),10)||0),f[g]+=v[m]||0,b.over[m]&&(f[g]+=e["x"===c?"width":"height"]()*b.over[m])):(d=e[m],f[g]=d.slice&& "%"===d.slice(-1)?parseFloat(d)/100*n:d);b.limit&&/^\d+$/.test(f[g])&&(f[g]=0>=f[g]?0:Math.min(f[g],n));!a&&1<b.axis.length&&(h===f[g]?f={}:u&&(k(b.onAfterFirst),f={}))});k(b.onAfter)}})};p.max=function(a,d){var b="x"===d?"Width":"Height",h="scroll"+b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b="client"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});

[go top]
$('.goTop').click(function(){
	$('body').scrollTo(0, 800);
});
$(window).scroll(function(){
	if($(window).scrollTop() > $(window).height()){
		$('.goTop').fadeIn();
	}else{
		$('.goTop').fadeOut();
	}
});

[go to some element]
$(...).scrollTo($('div li:eq(14)'), 800);
$(...).scrollTo($('div li:eq(14)'), 800);

[絕對位置]
$(...).scrollTo(150, 800);

[位移offset]
$(...).scrollTo('li:eq(15)', 1000, {offset: {top:-5, left:-30} });

[還有很多功能去這邊看：https://demos.flesler.com/jquery/scrollTo/]


################################## go top功能 ##################################
$(window).on('scroll', function(){
	var wh = $(window).height();
	if($(this).scrollTop() > wh){
		$('.go-top').fadeIn();
	}else{
		$('.go-top').fadeOut();
	}
})
$('.go-top').on('click', function(){
	$(window).animate({scrollTop:0},500);
});


################################## cookie教學 ##################################
[建立cookie]
document.cookie = "username=John Doe"; //預設在關掉瀏覽器後就消失
[加上到期時間(UTC time)]
document.cookie = "username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC";
[設置path參數；預設為當前頁面]
document.cookie = "username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";
[取得cookie]
var x = document.cookie; //會得到一個像這樣的字串："cookie1=value; cookie2=value; cookie3=value;"
[改變cookie的值]
document.cookie = "username=John Smith; expires=Thu, 18 Dec 2013 12:00:00 UTC;";
[刪除cookie]
document.cookie = "username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;"; //將時間設為過去
[註]
我們應該要指派cookie的path值，以免我們刪錯cookie；如果沒有指派，有的瀏覽器會不讓我們刪cookie


################################## 常用cookie function ##################################
//建立一個cookie
function setCookie(cookie_name, cvalue, exdays) {
	var d = new Date();
	d.setTime(d.getTime() + (exdays*24*60*60*1000));
	var expires = "expires="+ d.toUTCString();
	document.cookie = cookie_name + "=" + cvalue + ";" + expires + ";path=/";
}

//取cookie的值
function getCookie(cookie_name) {
	var name = cookie_name + "=";
	var decodedCookie = decodeURIComponent(document.cookie);
	var ca = decodedCookie.split(';');
	for(var i = 0; i <ca.length; i++) {
		var c = ca[i];
			while (c.charAt(0) == ' ') {
			c = c.substring(1);
		}
			if (c.indexOf(name) == 0) {`
			return c.substring(name.length, c.length);
		}
	}
	return "";
}


################################## 傳回querystring的值 ##################################
function returnQuerystringValue(key, url) {
	if (!url) url = window.location.href;
	key = key.replace(/[\[\]]/g, '\\$&').toLowerCase();
	var regex = new RegExp('[?&]' + key + '(=([^&#]*)|&|#|$)'),
		results = regex.exec(url.toLowerCase());
	if (!results) return null;
	if (!results[2]) return '';
	return decodeURIComponent(results[2].replace(/\+/g, ' '));
}


################################## 以key的名稱和值尋找陣列中的物件中的其它key的值…看範例好了… ##################################
/* 
var myAry = [
	{a:1, b:2, c:3},
	{a:11, b:22, f:33}
]
console.log(returnAryObjVal('b','22','f', myAry)); //傳回33
*/

function returnAryObjVal(specKey, specKeyValue, TargetKey, array){
	for(let i in array){
		if(array[i][specKey] == specKeyValue){
			return array[i][TargetKey];
		}
	}
}


################################## IE相容的includes() ##################################
Array.prototype.contains = function(val){
	return this.indexOf(val) >= 0;
}


################################## 臉書開啟app ##################################
//ios
  var IOS_SITE = "fb://page/?id=103801226391404";
//Android
  var Android_SITE = "fb://page/103801226391404";
  
查ID：https://tw.piliapp.com/facebook/id/?url=https%3A%2F%2Fwww.facebook.com%2FkartriderTW%2F


################################## 橘子footer ##################################
<script src="https://tw.hicdn.beanfun.com/beanfun/GamaWWW/allProducts/script/game-footer.js" id="game-footer" prod="新瑪奇B" theme="dark"></script>
天堂M | 魔力寶貝M | 天堂 | 天堂國際服 | 天堂免服 | 新楓之谷 | 絕對武力 | 絕對武力2 | 新瑪奇B | 跑跑卡丁車 | 艾爾之光 | 爆爆王 | 泡泡大亂鬥 | 勁舞團 | 召喚圖板 | 發射吧少女 | 便利商店口袋版 | bf!遊戲 | 新龍之谷 | AURORA7 | 龍之谷新世界 | 月光雕刻師 | 彈射世界


################################## topbar.js ##################################
新楓之谷	<script src="https://tw.beanfun.com/MapleStory/menuBar/topBar.js"></script>
跑跑卡丁車	<script src="https://tw.beanfun.com/kartrider/menuBar/topBar.js"></script>
天堂免服	<script src="https://tw.beanfun.com/lineagefree/menuBar/topBar.js"></script>
天堂月服	<script src="https://tw.beanfun.com/lineage/menuBar/topBar.js"></script>
天堂國際服	<script src="https://tw.beanfun.com/lineagenew/menuBar/topBar.js"></script>
絕對武力	<script src="https://tw.beanfun.com/CSO/menuBar/topBar.js"></script>
艾爾之光	<script src="https://tw.beanfun.com/ELSWORD/menuBar/topBar.js"></script>
新瑪奇		<script src="https://tw.beanfun.com/mabinogi/menuBar/topBar.js"></script>
爆爆王		<script src="https://tw.beanfun.com/BNB/menuBar/topBar.js"></script>
新龍之谷	<script src="https://tw.beanfun.com/DragonNest/assets/script/topBar.js"></script>















<!-- <div class="fixed-bg sec1 isPC"></div> -->

<style>body .isPC, body .isMobile{display:none;}</style>

<!-- <script>
function prependChild(parent,node){parent.insertBefore(node,parent.firstChild);}
var head_d = document.getElementsByTagName('head')[0];
var path_d = 'assets/css/';
var file_d = '';
var link_d = document.createElement('link');
(isMobile.any)?file_d='default-mb.css':file_d='default-pc.css';
link_d.rel='stylesheet';link_d.type='text/css';link_d.href=path_d+file_d;
prependChild(head_d,link_d);
</script> -->


#effect3d {
  width:300px;
  height:200px;
  border:2px solid red;
  transform: perspective(300px) rotateY(-30deg);
  transform-origin: 50% 50%;
  position: absolute;
  left: -50px;
}
.inner{
  width:273px;
  height:260px;
  border:2px solid lime;
  transform: perspective(150px) rotateY(30deg);
  position: relative;
  left: 80px;
  top: -15px;
}